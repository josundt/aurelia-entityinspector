{
  "extends": [
    "tslint:latest",
    "./tslint-eslint-rules.json",
    "./tslint-microsoft-contrib.json"
  ],
  "defaultSeverity": "error",
  "rules": {
    "adjacent-overload-signatures": true,
    "align": {
      "severity": "warning",
      "options": [
        "parameters",
        /*"arguments",*/
        "statements",
        "members"
        /*, "elements"*/
      ]
    },
    "array-type": [true, "array-simple"],
    "arrow-parens": [true, "ban-single-arg-parens"],
    "arrow-return-shorthand": [true /*, "multiline"*/],
    "await-promise": true,
    "ban": [true, "I18N"],
    "ban-comma-operator": true,
    "ban-ts-ignore": true,
    "ban-types": {
        "options": [
            ["Object", "Avoid using the `Object` type. Did you mean `object`?"],
            ["Function", "Avoid using the `Function` type. Prefer a specific function type, like `() => void`."],
            ["Boolean", "Avoid using the `Boolean` type. Did you mean `boolean`?"],
            ["Number", "Avoid using the `Number` type. Did you mean `number`?"],
            ["String", "Avoid using the `String` type. Did you mean `string`?"],
            ["Symbol", "Avoid using the `Symbol` type. Did you mean `symbol`?"]
        ]
    },
    "binary-expression-operand-order": true,
    "callable-types": true,
    "class-name": true,
    "comment-format": {
      "severity": "off",
      "options": [
        "check-space",
        "check-lowercase"/*,
        {
          "ignore-words": ["TODO", "HACK"],
          "ignore-pattern": "/whatever/"
        }*/
      ]
    },
    "completed-docs": false,
    "curly": true,
    "cyclomatic-complexity": {
      "severity": "off",
      "options": 20
    },
    "deprecation": true,
    "encoding": false,
    "eofline": false,
    "file-header": [false, "Copyright \\d{4}"],
    "file-name-casing": [true, "kebab-case"],
    "forin": true,
    "function-constructor": true,
    "import-blacklist": [false, "jquery"],
    "import-spacing": true,
    "indent": {
      "options": ["spaces", 4]
    },
    "interface-name": {
      "severity": "off",
      "options": ["always-prefix"]
    },
    "interface-over-type-literal": true,
    "jsdoc-format": true,
    "label-position": true,
    "linebreak-style": [false, "CRLF"],
    "match-default-export-name": false,
    "max-classes-per-file": {
      "severity": "off",
      "options": [5]
    },
    "max-file-line-count": {
      "severity": "off",
      "options": [2000]
    },
    "max-line-length": {
      "severity": "warning",
      "options": {"limit": 180, "ignore-pattern": "^import |^\\s*\\/\\/ |^\\s*\\/\\*\\*"}
    },
    "member-access": [true, /*"check-accessor", "check-constructor",*/ "no-public"],
    "member-ordering": {
      "severity": "off",
      "options": {
        "alphabetize": false,
        "order": [
          "constructor",
          "public-static-field",
          "protected-static-field",
          "private-static-field",
          "public-instance-field",
          "protected-instance-field",
          "private-instance-field",
          "public-static-method",
          "protected-static-method",
          "private-static-method",
          "public-instance-method",
          "protected-instance-method",
          "private-instance-method"
        ]
      }
    },
    "new-parens": true,
    "newline-before-return": false,
    "newline-per-chained-call": false,
    "no-angle-bracket-type-assertion": false,
    "no-any": false,
    "no-arg": true,
    "no-bitwise": true,
    "no-boolean-literal-compare": false,
    "no-conditional-assignment": true,
    "no-consecutive-blank-lines": {
      "severity": "warning"
    },
    "no-console": true,
    "no-construct": true,
    "no-debugger": true,
    "no-default-export": false,
    "no-duplicate-imports": [true, { "allow-namespace-imports": true }],
    "no-duplicate-super": true,
    "no-duplicate-switch-case": true,
    "no-duplicate-variable": true,
    "no-dynamic-delete": false,
    "no-empty": true,
    "no-empty-interface": false,
    "no-eval": true,
    "no-floating-promises": false,
    "no-for-in-array": true,
    "no-implicit-dependencies": false,
    "no-import-side-effect": true,
    "no-inferrable-types": [false, "ignore-params", "ignore-properties"],
    "no-inferred-empty-object-type": true,
    "no-internal-module": true,
    "no-invalid-template-strings": true,
    "no-invalid-this": true,
    "no-irregular-whitespace": true,
    "no-magic-numbers": false,
    "no-mergeable-namespace": true,
    "no-misused-new": true,
    "no-namespace": false,
    "no-non-null-assertion": false,
    "no-null-keyword": false,
    "no-object-literal-type-assertion": false,
    "no-parameter-properties": false,
    "no-parameter-reassignment": false,
    "no-redundant-jsdoc": false,
    "no-reference": true,
    "no-reference-import": true,
    "no-require-imports": true,
    "no-return-await": true,
    "no-shadowed-variable": true,
    "no-sparse-arrays": true,
    "no-string-literal": false,
    "no-string-throw": true,
    "no-switch-case-fall-through": false,
    "no-trailing-whitespace": {
      "severity": "warning",
      "options": [ "ignore-template-strings" ]
    },
    "no-unbound-method": false,
    "no-unnecessary-callback-wrapper": true,
    "no-unnecessary-initializer": true,
    "no-unnecessary-qualifier": true,
    "no-unnecessary-type-assertion": false,
    "no-unsafe-any": false,
    "no-unsafe-finally": true,
    "no-unused-expression": [true /*,"allow-fast-null-checks", "allow-new", "allow-tagged-template"*/],
    "no-use-before-declare": false,
    "no-var-keyword": true,
    "no-var-requires": true,
    "no-void-expression": [true, "ignore-arrow-function-shorthand"],
    "number-literal-format": true,
    "object-literal-sort-keys": [false, "ignore-case"],
    "object-literal-key-quotes": [true, "consistent-as-needed"],
    "object-literal-shorthand": [true, "never"],
    "only-arrow-functions": [true, "allow-declarations", "allow-named-functions"],
    "one-line": {
      "severity": "warning",
      "options": [
        "check-open-brace",
        "check-catch",
        "check-whitespace",
        "check-finally"
        /*, "check-else" */
      ]
    },
    "one-variable-per-declaration": {
      "options": ["ignore-for-loop"]
    },
    "ordered-imports": false,
    "prefer-conditional-expression": false,
    "prefer-const": true,
    "prefer-for-of": true,
    "prefer-function-over-method": false,
    "prefer-method-signature": true,
    "prefer-object-spread": true,
    "prefer-readonly": true,
    "prefer-switch": {
      "options": { "min-cases": 3 }
    },
    "prefer-template": true,
    "prefer-while": false,
    "promise-function-async": {
      "severity": "none",
      "options": [
        "check-function-delcaration",
        "check-method-declaration"
      ]
    },
    "quotemark": [ true, "double" /*, "avoid-escape"*/],
    "radix": true,
    "restrict-plus-operands": false, /* FAULTY */
    "return-undefined": true,
    "semicolon": [true, "always"],
    "space-before-function-paren": {
      "severity": "warning",
      "options": {
        "anonymous": "always",
        "asyncArrow": "always",
        "constructor": "never",
        "method": "never",
        "named": "never"
      }
    },
    "space-within-parens": true,
    "strict-boolean-expressions": {
      "severity": "off",
      "options": [
        "allow-null-union",
        "allow-undefined-union",
        "allow-string"
        /*, allow-number */
      ]
    },
    "strict-type-predicates": false,
    "switch-default": false,
    "switch-final-break": [true, "always"],
    "trailing-comma": {
      "severity": "off",
      "options": {
        "singleline": "never",
        "multiline": "never"
      }
    },
    "triple-equals": true,
    "type-literal-delimiter": [true, { "singleLine": "always" }],
    "typedef": {
      "options": [
        "call-signature",
        //"arrow-call-signature",
        "parameter",
        //"arrow-parameter",
        "property-declaration",
        //"variable-declaration",
        "member-variable-declaration"
        //"object-destructuring",
        //"array-destructuring"
      ]
    },
    "typedef-whitespace": {
      "severity": "warning",
      "options": [
        {
          "call-signature": "nospace",
          "index-signature": "nospace",
          "parameter": "nospace",
          "property-declaration": "nospace",
          "variable-declaration": "nospace"
        },
        {
          "call-signature": "onespace",
          "index-signature": "onespace",
          "parameter": "onespace",
          "property-declaration": "onespace",
          "variable-declaration": "onespace"
        }
      ]
    },
    "unified-signatures": false,
    "use-default-type-parameter": false,
    "use-isnan": true,
    //"use-strict": [ true, "check-module", "check-function" ],
    "variable-name": [
      true,
      "ban-keywords",
      "check-format",
      "allow-leading-underscore"
    ],
    "whitespace": {
      "severity": "warning",
      "options": [
        "check-branch",
        "check-decl",
        "check-operator",
        "check-module",
        "check-separator",
        "check-type",
        /* "check-typecast", */
        "check-preblock"
      ]
    },

    /* TSLINT-MICROSOFT-CONTRIB rules */
    "chai-prefer-contains-to-index-of": false, // N/A
    "chai-vague-errors": false, // N/A
    "export-name": false, // Disabled; too strict
    "function-name": [
      true,
      {
        "method-regex": "^[a-z][\\w\\d]+$",
        "private-method-regex": "^[_a-z][\\w\\d]+$", // changed from default: "^[a-z][\\w\\d]+$"
        "protected-method-regex": "^[a-z][\\w\\d]+$",
        "static-method-regex": "^[a-z][\\w\\d]+$", // changed from default: "^[A-Z_\\d]+$"
        "function-regex": "^[a-z][\\w\\d]+$"
      }
    ],
    "import-name": false,
    "insecure-random": true,
    "jquery-deferred-must-complete": false, /* NA */
    "max-func-body-length": [true, 1000, {"ignore-parameters-to-function-regex": "describe"}],
    "missing-jsdoc": false, // Disabled, already governed by TSLint STD rule "completed-docs"
    "mocha-avoid-only": true, // also works for jasmine
    "mocha-no-side-effect-code": true, // also works for jasmine
    "mocha-unneeded-done": true, // also works for jasmine
    "no-backbone-get-set-outside-model": false, /* N/A */
    "no-banned-terms": true,
    "no-cookies": true,
    "no-delete-expression": true,
    "no-disable-auto-sanitization": true,
    "no-document-domain": true,
    "no-document-write": true,
    "no-empty-interfaces": false, // Disabled, already governed by TSLint STD rule "no-empty-interface"
    "no-empty-line-after-opening-brace": false,
    "no-exec-script": true,
    "no-for-in": false, // Disabled, already governed by TSLint STD rule
    "no-function-expression": false, // Disabled, already governed by TSLint STD rule "only-arrow-functions"
    "no-http-string": [true, "http://www.example.com/?.*", "http://www.examples.com/?.*"],
    "no-increment-decrement": false,
    "no-inner-html": true,
    "no-jquery-raw-elements": true,
    "no-multiline-string": true,
    "no-octal-literal": true,
    "no-relative-imports": false, // Disabled; we use relative imports
    "no-reserved-keywords": false,
    "no-single-line-block-comment": false,
    "no-string-based-set-immediate": true,
    "no-string-based-set-interval": true,
    "no-string-based-set-timeout": true,
    "no-suspicious-comment": {
      "severity": "off"
    }, // Temporarily switched off
    "no-this-assignment": true,
    "no-typeof-undefined": true,
    "no-unnecessary-class": true,
    "no-unnecessary-field-initialization": false, // Disabled, already governed by TSLint STD rule "no-unnecessary-initializer"
    "no-unnecessary-local-variable": false, // Disabled: We prefer to sometimes assign the result of a function to a variable before returning it for debugging
    "no-unnecessary-override": false, /* DISABLED: Sometimes the overridden method has more specific param types or return types than the base method */
    "no-unnecessary-semicolons": true,
    "no-unsupported-browser-code": true,
    "no-with-statement": true,
    "non-literal-require": false,
    "possible-timing-attack": true,
    "prefer-array-literal": false, // Disabled: Rules for array type notations are governed by the TSLint STD rule "array-type"
    "promise-must-complete": true,
    "react-anchor-blank-noopener": false, /* N/A */
    "react-iframe-missing-sandbox": false, /* N/A */
    "react-no-dangerous-html": false, /* N/A */
    "react-this-binding-issue": false, /* N/A */
    "react-unused-props-and-state": false,  /* N/A */
    "underscore-consistent-invocation": false, /* N/A */
    "unnecessary-bind": true,
    "use-named-parameter": true
  }
}

